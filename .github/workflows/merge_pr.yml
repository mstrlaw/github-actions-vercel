# This workflow runs for any PR merged into main
name: Merge and deploy to Development
on:
  pull_request:
    branches:
    - main
    types: [closed]

jobs:
  confirm-merge:
    if: ${{ github.event.pull_request.merged }}
    runs-on: ubuntu-latest
    steps:
      - name: 'Confirm'
        run: echo Just checking PR is merged and not closed
  build-and-upload:
    runs-on: ubuntu-latest
    needs: [confirm-merge]
    steps:
      - uses: actions/checkout@v4
      - name: 'Build & deploy'
        run: |
          echo vercel build
          vercel deploy --prebuilt >deployment-url.txt 2>error.txt
          echo alias $deploymentUrl to dev.surfe.com
        #We need the below code to alias the returned deploymentUrl into our custom dev domain
        #See: https://vercel.com/docs/cli/deploy#deploying-to-a-custom-domain
        
        #vercel deploy >deployment-url.txt 2>error.txt
        # check the exit code
        #code=$?
        #if [ $code -eq 0 ]; then
            # Now you can use the deployment url from stdout for the next step of your workflow
            #deploymentUrl=`cat deployment-url.txt`
            #vercel alias $deploymentUrl my-custom-domain.com
        #else
            # Handle the error
            #errorMessage=`cat error.txt`
            #echo "There was an error: $errorMessage"
        #fi