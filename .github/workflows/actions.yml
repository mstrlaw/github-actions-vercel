name: Deploy
run-name: ${{ github.actor }} is performing ${{ github.event_name }} ðŸš€
on: [push, workflow_dispatch]
jobs:
  test-locally:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install PM2
        run: npm i pm2 -g
      - name: Run on localhost
        id: start-serve
        run: |
          pm2 serve src --name "server"
          curl -i http://127.0.0.1:8080/
      - name: Stop localhost
        id: stop-serve
        run: pm2 stop server

      # - name: Get installed Playwright version
      #   id: playwright-version
      #   run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').dependencies['@playwright/test'].version)")" >> $GITHUB_ENV
      # - name: Cache playwright binaries
      #   uses: actions/cache@v3
      #   id: playwright-cache
      #   with:
      #     path: |
      #       ~/.cache/ms-playwright
      #     key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
      # - run: npm ci
      # - run: npx playwright install --with-deps
      #   if: steps.playwright-cache.outputs.cache-hit != 'true'
      # - run: npx playwright install-deps
      #   if: steps.playwright-cache.outputs.cache-hit != 'true'
      # - name: Run Playwright tests
      #   run: npx playwright test
      # - uses: actions/upload-artifact@v2
      #   if: always()
      #   with:
      #     name: playwright-test-results
      #     path: test-results/
  # test-e2e:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 60
  #   steps:
  #   - uses: actions/checkout@v4
  #   - uses: actions/setup-node@v3
  #     with:
  #       node-version: 18
  #   - name: Get installed Playwright version
  #     id: playwright-version
  #     run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').dependencies['@playwright/test'].version)")" >> $GITHUB_ENV
  #   - name: Cache playwright binaries
  #     uses: actions/cache@v3
  #     id: playwright-cache
  #     with:
  #       path: |
  #         ~/.cache/ms-playwright
  #       key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
  #   - run: npm ci
  #   - run: npx playwright install --with-deps
  #     if: steps.playwright-cache.outputs.cache-hit != 'true'
  #   - run: npx playwright install-deps
  #     if: steps.playwright-cache.outputs.cache-hit != 'true'
  #   - name: Run Playwright tests
  #     run: npx playwright test
  #   - uses: actions/upload-artifact@v2
  #     if: always()
  #     with:
  #       name: playwright-test-results
  #       path: test-results/